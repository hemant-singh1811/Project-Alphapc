const mysql = require('mysql2')

const connection = mysql.createConnection({
    host: 'localhost',
    database: 'mytestdb',
    user: 'myuser',
    password: 'mypass'
})


function create(table_name, sql_String,primary) {
    console.log("inside the create fun " + sql_String);
    console.log('primary : ',primary);
    var sql = "`" + `create table if not exists ${table_name}(`;
    if(!primary){
     sql+=`SNO Integer auto_increment primary key,`;
    }
         sql += sql_String + ')' + "`";
    
    console.log(sql);
    return new Promise((resolve, reject) => {

        connection.query(eval(sql), function (err, result) {
            if (err) {
                console.log(err);
                reject(err);
            } else {
                
                resolve('table ' + '"' + table_name + '"' + ' created successfully');
            }
        })
        //    connection.close();
    })
}

var table = 'student';

// create(table).then((d) => {
//     console.log(d);
// }).catch((e) => {
//     console.error(e);
// })



function gettable() {
    return new Promise((resolve, reject) => {
        connection.query(`show tables`, function (err, result) {
            if (err) {
                reject(err)
            } else {
                resolve(result)
            }
        })
    })
}

// gettable().then((d)=>{
//     d.forEach(element => {
//         console.log(element.Tables_in_mytestdb);
//         // console.log('table name :',JSON.stringify(element.Tables_in_mytestdb),"  : ",'\n')
//     //    scema(element.Tables_in_mytestdb).then(data=>console.log('table name :',JSON.stringify(element.Tables_in_mytestdb),"  : ",data,'\n'));
//         console.log('table : ',element.Tables_in_mytestdb);   
//     });
//     // console.log('table : ',d.length);   

//     // console.log(d);
// }).catch((e)=>{
//     console.error(e);
// })


function scema(tables) {
    return new Promise((resolve, reject) => {
        connection.query(`describe ${tables}`, function (err, result) {
            if (err) {
                reject(err)
            } else {
                resolve(result)
            }
        })
    })
}

function select(table_name) {
    return new Promise(function (resolve, reject) {
        connection.query(`
        select * from ${table_name}
        `, function (err, result) {
            if (err) {
                reject(err);
            } else {
                resolve(result)
            }
        })
    })
}
var table = 'student';

function deletetable(table_name) {
    return new Promise(function (resolve, reject) {
        connection.query(`
        drop table ${table_name};
        `, function (err, result) {
            if (err) {
                resolve();
            }
            else {
                reject();
            }
        })
    })
}

function changeColumnName(table,old_col,new_col){
    return new Promise(function(resolve,reject){
        connection.query(`
        ALTER TABLE ${table} RENAME COLUMN ${old_col} TO ${new_col};
        `,function(err,result){
            if(err){
                console.error(err);
                reject('error')
            }
            else
            resolve('column name is change of table ',table);
        })
    })
}

// scema('logi').then((D)=>console.log(D))

// scema('loginss').then((data)=>{

//     data.forEach(ety => {
//         console.log(ety);
//         // console.log(ety.Field);
//     });
//     // console.log(data);
// }).catch((e)=>{
//     console.error(e);
// })

// select(table).then((d)=>{
//     console.log('inside the ');
//     var scem;
//    let task=async()=>scema(table).then((data)=>{
//        scem=data;
//         // console.log(data);
//     }).catch((e)=>{
//         console.error(e);
//     })
//     task(); 
//     if(scem!=null){

//      scem.forEach(e => {
//         console.log(e);
//          d.forEach(t => {
//             console.log(t.e); 
//         });     
//      });       


// }
// })
// .catch((e)=>{
//     console.log(e);
// })

function drop(table_name) {
    return new Promise((resolve, reject) => {
        connection.query(`drop table ${table_name}`, function (err, result) {
            if (err) {
                reject(err)
            } else {
                resolve(result)
            }
        })
    })
}

function dropalldata(table_name) {
    return new Promise((resolve, reject) => {
        connection.query(`Delete from ${table_name}`, function (err, result) {
            if (err) {
                reject(err)
            } else {
                resolve(result)
            }
        })
    })
}

function changeName(prev_name, new_name) {
    return new Promise(function (resolve, reject) {
        connection.query(`
ALTER TABLE ${prev_name}   
RENAME TO ${new_name};  
`, function (err, result) {
            if (err){
             
                reject(err)
            }
            else{
             console.log('table name change succesfully to', new_name);
                resolve('table name change succesfully to', new_name);
            }
        })

    })
}

function insert(table, data) {
    console.log('came at db /insert');
    var length = data.length;
    var str = '';
    for (let i = 0; i < length; i++) {
        str += "'";
        str += data[i];
        str += "'";
        if (i != length - 1)
            str += ",";

    }
//   console.log('at insertt');
    return new Promise(function (resolve, reject) {
        connection.query(`
        insert into ${table} values(${str});
        `, function (err, result) {
            if (err)
                reject(err);
            else
                resolve('data is inserted successfully');
        })

    })

}

module.exports = {
    connection,
    mysql,
    create,
    changeColumnName,
    drop,
    gettable,
    scema,
    select,
    deletetable,
    changeName,
    dropalldata,
    insert
}